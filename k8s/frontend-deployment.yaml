apiVersion: apps/v1
kind: Deployment
metadata:
  name: cfrs-frontend
  labels:
    app: cfrs-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cfrs-frontend
  template:
    metadata:
      labels:
        app: cfrs-frontend
    spec:
      containers:
      - name: frontend
        image: rajbunsha/cfrs-frontend:latest
        ports:
        - containerPort: 3000
        
        # Environment Variables for Configuration
        env:
        - name: NEXT_PUBLIC_BACKEND_URL
          value: "http://cfrs-backend:8000"
        
        # Resource Management
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        
        # Health Checks
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
        
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10

      # Initialization Container for Backend Dependency
      initContainers:
      - name: wait-for-backend
        image: busybox:1.31.0
        command: 
        - 'sh'
        - '-c'
        - |
          until wget -qO- http://cfrs-backend:8000/health || wget -qO- http://cfrs-backend:8000/healthz; do 
            echo "Waiting for backend to be ready..."; 
            sleep 3; 
          done

---
apiVersion: v1
kind: Service
metadata:
  name: cfrs-frontend
  labels:
    app: cfrs-frontend
spec:
  type: ClusterIP  # Recommended for internal communication
  selector:
    app: cfrs-frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000